// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?         @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  establishment  Establishment[]
}

model Establishment {
  id                  String     @id @default(uuid()) @map("_id")
  name                String     @unique
  contact             String     @unique
  address             String?
  idEstablishmentName String?    @unique
  idEstablishment     String
  establishment       User       @relation(fields: [idEstablishment], references: [id])
  categories          Category[]
  logo                String?
}

model Category {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  name            String        @unique
  establishmentId String
  establishment   Establishment @relation(fields: [establishmentId], references: [id])
  items           Item[]
}

model Item {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  description String?
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  options     Option[]
}

model Option {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  price  Float
  itemId String
  item   Item   @relation(fields: [itemId], references: [id])
}

model ResetPasswordToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model VerificationTokenUser {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}
